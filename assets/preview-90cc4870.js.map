{"version":3,"file":"preview-90cc4870.js","sources":["../../node_modules/.pnpm/react-router@6.15.0_react@18.0.0/node_modules/react-router/dist/index.js","../../node_modules/.pnpm/storybook-addon-react-router-v6@1.0.2_@storybook+blocks@7.3.2_@storybook+components@7.3.2_@st_24yuvhuusiyh7ivzn6hzmojbc4/node_modules/storybook-addon-react-router-v6/dist/index.mjs","../../.storybook/preview.js"],"sourcesContent":["/**\n * React Router v6.15.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match;\n    // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","import D, { useState, useRef, useLayoutEffect, useEffect } from 'react';\nimport { makeDecorator, addons } from '@storybook/preview-api';\nimport { Route, useLocation, generatePath, createRoutesFromElements, createMemoryRouter, RouterProvider, useParams, useSearchParams, useNavigationType } from 'react-router-dom';\nimport { UNSAFE_RouteContext } from 'react-router';\nimport { STORY_ARGS_UPDATED } from '@storybook/core-events';\n\nvar h=\"storybook/react-router-v6\",b=\"reactRouter\",o={CLEAR:`${h}/clear`,NAVIGATION:`${h}/navigation`,STORY_LOADED:`${h}/story-loaded`,ROUTE_MATCHES:`${h}/route-matches`,ACTION_INVOKED:`${h}/action_invoked`,ACTION_SETTLED:`${h}/action_settled`,LOADER_INVOKED:`${h}/loader_invoked`,LOADER_SETTLED:`${h}/loader_settled`};var M=()=>{let r=useLocation();return `${r.pathname}${r.search}${r.hash}`};var P=D.createContext([]);var A=()=>D.useContext(P);var F=()=>{let r=useRef(0),e=useLocation(),t=useParams(),[a]=useSearchParams(),n=useNavigationType(),s=A(),p={};a.forEach((u,i)=>{p[i]=u;});let c=M(),m=s.map(u=>[u.route.path,u.params]);return u=>{switch(u){case o.STORY_LOADED:{let i={url:c,path:e.pathname,routeParams:t,searchParams:p,routeMatches:m,hash:e.hash,routeState:e.state};return {key:`${o.STORY_LOADED}_${r.current++}`,type:o.STORY_LOADED,data:i}}case o.NAVIGATION:{let i={url:c,path:e.pathname,routeParams:t,searchParams:p,hash:e.hash,routeState:e.state,routeMatches:m,navigationType:n};return {key:`${o.NAVIGATION}_${r.current++}`,type:o.NAVIGATION,data:i}}case o.ROUTE_MATCHES:return {key:`${o.ROUTE_MATCHES}_${r.current++}`,type:o.ROUTE_MATCHES,data:{matches:m}}}}};function k(){let r={};return r.promise=new Promise((e,t)=>{r.resolve=e,r.reject=t;}),r}function tt(r){let e={};return r.forEach((t,a)=>{if(t instanceof File){e[a]={filename:t.name,filesize:t.size,filetype:t.type};return}e[a]=t;}),e}async function v(r){let e=r.clone(),t=e.headers.get(\"content-type\")||\"\",a;switch(!0){case t.startsWith(\"text\"):a=await e.text();break;case t.startsWith(\"application/json\"):a=await e.json();break;case t.startsWith(\"multipart/form-data\"):case t.startsWith(\"application/x-www-form-urlencoded\"):{a=tt(await e.formData());break}default:await e.arrayBuffer().then(s=>s.byteLength);}return a}var $=({children:r})=>{let e=addons.getChannel(),t=useLocation(),[a,n]=useState(),[s,p]=useState(!1),[c,m]=useState([]),u=F(),i=A(),E=useRef(k());return useLayoutEffect(()=>{n(t);}),useEffect(()=>{s&&E.current.resolve();},[s]),useEffect(()=>{m(i);let l=setTimeout(()=>{s||(p(!0),e.emit(o.STORY_LOADED,u(o.STORY_LOADED)));},0);return ()=>clearTimeout(l)},[s,i]),useEffect(()=>{a!==void 0&&a.key!==t.key&&E.current.promise.then(()=>{e.emit(o.NAVIGATION,u(o.NAVIGATION));});},[t]),useEffect(()=>{s&&i.length>c.length&&(m(i),e.emit(o.ROUTE_MATCHES,u(o.ROUTE_MATCHES)));},[i]),D.createElement(D.Fragment,null,r)};var H=({children:r,routePath:e,routeParams:t,searchParams:a,routeState:n,browserPath:s,hydrationData:p})=>{let c=addons.getChannel(),[m,u]=useState(),[i,E]=useState(0),l=useRef();return c.on(STORY_ARGS_UPDATED,()=>{E(R=>R+1);}),useLayoutEffect(()=>{let R=generatePath(e||\"\",t),f=new URLSearchParams(a).toString(),y={search:f.length>0?`?${f}`:\"\",state:n};s!==void 0&&(y.pathname=s),s===void 0&&R!==\"\"&&(y.pathname=R),l.current!==void 0&&Object.assign(y,l.current);let d=createRoutesFromElements(r),T=createMemoryRouter(d,{initialEntries:[y],hydrationData:p});T.subscribe(N=>{l.current=N.location;}),u(T);},[i]),m===void 0?null:D.createElement(RouterProvider,{router:m,fallbackElement:D.createElement(lt,null)})};function lt(){return D.createElement(\"p\",null,\"Performing initial data load\")}var _=()=>async(r,e)=>{switch(r){case o.ACTION_INVOKED:{let{request:t,params:a,context:n}=e,s={url:t.url,method:t.method,body:await v(t)};return {type:o.ACTION_INVOKED,data:{params:a,request:s,context:n}}}case o.ACTION_SETTLED:return {type:o.ACTION_SETTLED,data:e};case o.LOADER_INVOKED:{let{request:t,params:a,context:n}=e,s={url:t.url,method:t.method,body:v(t)};return {type:o.LOADER_INVOKED,data:{params:a,request:s,context:n}}}case o.LOADER_SETTLED:return {type:o.LOADER_SETTLED,data:e}}};var Y=({children:r,browserPath:e,routePath:t=\"*\",routeParams:a,routeHandle:n,searchParams:s,routeState:p,outlet:c,hydrationData:m,action:u,loader:i,errorElement:E,shouldRevalidate:l,routeId:R})=>{let f=addons.getChannel(),[g,y]=useState([]);UNSAFE_RouteContext.Provider._context=new Proxy(UNSAFE_RouteContext.Provider._context??{},{set(N,w,S){return w===\"_currentValue\"&&y(I=>S!==void 0&&S.matches.length>I.length?S.matches:I),Reflect.set(N,w,S)}});let d=Et(c)?c:{element:c},T={element:d.element,handle:d.handle,errorElement:d.errorElement,action:d.action!==void 0?K(f,d.action):void 0,loader:d.loader!==void 0?q(f,d.loader):void 0};return D.createElement(P.Provider,{value:g},D.createElement(H,{routePath:t,routeParams:a,routeState:p,searchParams:s,browserPath:e,hydrationData:m},D.createElement(Route,{id:R,path:t,handle:n,action:u!==void 0?K(f,u):void 0,loader:i!==void 0?q(f,i):void 0,shouldRevalidate:l,errorElement:E,element:D.createElement($,null,r)},d.element!==void 0&&d.path===void 0&&D.createElement(Route,{index:!0,...T}),d.element!==void 0&&D.createElement(Route,{path:d.path,...T}))))};function Et(r){return r!==null&&typeof r==\"object\"&&Object.prototype.hasOwnProperty.call(r,\"element\")}function K(r,e){let t=_();return async function(a){if(e===void 0)return;r.emit(o.ACTION_INVOKED,await t(o.ACTION_INVOKED,a));let n=await e(a);return r.emit(o.ACTION_SETTLED,await t(o.ACTION_SETTLED,n)),n}}function q(r,e){let t=_();return async function(a){if(e===void 0)return;r.emit(o.LOADER_INVOKED,await t(o.LOADER_INVOKED,a));let n=await e(a);return r.emit(o.LOADER_SETTLED,await t(o.LOADER_SETTLED,n)),n}}var Dt=makeDecorator({name:\"withRouter\",parameterName:b,wrapper:(r,e,{parameters:t={}})=>{let{routePath:a=\"*\",routeParams:n,routeState:s,routeHandle:p,searchParams:c,outlet:m,browserPath:u,loader:i,action:E,errorElement:l,hydrationData:R,shouldRevalidate:f,routeId:g}=t;if(typeof a!=\"string\")throw new Error(\"React Router decorator : `path` must be a string\");if(n!==void 0&&typeof n!=\"object\")throw new Error(\"React Router decorator : `params` must be an object with strings as values\");if(c!==void 0&&typeof c!=\"object\")throw new Error(\"React Router decorator : `search` must be an object with strings as values\");return D.createElement(Y,{browserPath:u,routePath:a,routeParams:n,searchParams:c,routeState:s,routeHandle:p,outlet:m,loader:i,action:E,errorElement:l,hydrationData:R,shouldRevalidate:f,routeId:g},r(e))}});\n\nexport { Dt as withRouter };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.mjs.map","import { withRouter } from 'storybook-addon-react-router-v6'\n\nimport '../src/styles/storybooks.css';\n\n/** @type { import('@storybook/react').Preview } */\nconst preview = {\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n    reactRouter: {},\n    options: {}\n  },\n  decorators: [withRouter()],\n};\n\nexport default preview;\n"],"names":["RouteContext","React.createContext","makeDecorator","addons","STORY_ARGS_UPDATED","h","b","o","M","r","useLocation","P","D","A","F","useRef","e","t","useParams","a","useSearchParams","useNavigationType","p","u","i","c","m","k","tt","v","s","$","useState","E","useLayoutEffect","useEffect","l","H","generatePath","f","y","d","createRoutesFromElements","T","createMemoryRouter","N","RouterProvider","lt","_","Y","g","UNSAFE_RouteContext","S","Et","K","q","Route","Dt","preview","withRouter"],"mappings":"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","x_google_ignoreList":[0,1]}